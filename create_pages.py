import os
from atlassian import Confluence

def load_credentials(file_path):
    creds = {}
    with open(file_path, "r") as f:
        for line in f:
            if '=' in line:
                key, val = line.strip().split('=', 1)
                creds[key] = val
    return creds

def create_or_update_page(confluence, space_key, title, html_content, parent_id=None):
    """
    Create or update a Confluence page.
    - If page exists, update it.
    - Else, create new page under optional parent.
    """
    existing_page = confluence.get_page_by_title(space_key, title)

    if existing_page:
        page_id = existing_page['id']
        print(f"Updating existing page: {title} (id: {page_id})")
        confluence.update_page(
            page_id=page_id,
            title=title,
            body=html_content,
            parent_id=parent_id
        )
    else:
        print(f"Creating new page: {title}")
        confluence.create_page(
            space=space_key,
            title=title,
            body=html_content,
            parent_id=parent_id
        )

def main():
    # Path to credentials and HTML files
    base_dir = os.path.dirname(__file__)
    creds_path = os.path.join(base_dir, "variables.txt")

    creds = load_credentials(creds_path)
    username = creds.get("username")
    api_token = creds.get("password")
    confluence_url = "https://ashviniaws.atlassian.net/wiki"  # üîÅ Replace with your Confluence URL
    space_key = "testspace"  # üîÅ Replace with your Confluence space key

    if not username or not api_token:
        print("Missing username or API token in variables.txt")
        return

    confluence = Confluence(
        url=confluence_url,
        username=username,
        password=api_token
    )

    # List all HTML files generated by your Ansible playbook in the same dir
    for filename in os.listdir(base_dir):
        if filename.endswith(".html"):
            file_path = os.path.join(base_dir, filename)
            with open(file_path, "r", encoding="utf-8") as f:
                html_content = f.read()

            # Use filename (without extension) as page title (customize as needed)
            title = filename[:-5].replace("_", " ").title()

            try:
                create_or_update_page(confluence, space_key, title, html_content)
            except Exception as e:
                print(f"Failed to create/update page '{title}': {e}")

if __name__ == "__main__":
    main()

